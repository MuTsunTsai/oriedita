package origami_editor.editor;

import javax.swing.*;
import javax.swing.border.EmptyBorder;
import java.awt.*;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseMotionAdapter;
import java.util.ResourceBundle;

public class HelpDialog extends JDialog {
    private final ResourceBundle helpBundle;
    private final Point point = new Point();
    private JPanel contentPane;
    private JLabel helpLabel;

    public HelpDialog(Frame owner, Point canvasLocation, Dimension canvasSize) {
        super(owner, "Help");
        $$$setupUI$$$();
        setContentPane(contentPane);

        setUndecorated(true);

        JPopupMenu contextMenu = new JPopupMenu();
        JMenuItem dismissMenuItem = new JMenuItem("Dismiss");
        dismissMenuItem.addActionListener(e -> onCancel());

        contextMenu.add(dismissMenuItem);

        // Code to move the dialog by dragging the label.
        helpLabel.addMouseListener(new MouseAdapter() {
            public void mousePressed(MouseEvent e) {
                point.x = e.getX();
                point.y = e.getY();

                maybeShowPopup(e);
            }

            public void mouseReleased(MouseEvent e) {
                maybeShowPopup(e);

                if (!e.isPopupTrigger()) {
                    owner.requestFocus();
                }
            }

            private void maybeShowPopup(MouseEvent e) {
                if (e.isPopupTrigger()) {
                    contextMenu.show(e.getComponent(), e.getX(), e.getY());
                }
            }
        });
        helpLabel.addMouseMotionListener(new MouseMotionAdapter() {
            public void mouseDragged(MouseEvent e) {
                if (e.getButton() == MouseEvent.BUTTON1) {
                    Point p = getLocation();
                    setLocation(p.x + e.getX() - point.x, p.y + e.getY() - point.y);
                }
            }
        });

        setCursor(Cursor.getPredefinedCursor(Cursor.MOVE_CURSOR));

        // call onCancel() when cross is clicked
        setDefaultCloseOperation(HIDE_ON_CLOSE);

        // call onCancel() on ESCAPE
        contentPane.registerKeyboardAction(e -> onCancel(), KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);

        helpBundle = ResourceBundle.getBundle("help");

        helpLabel.setBorder(new EmptyBorder(10, 10, 10, 10));

        pack();

        setLocation(canvasLocation.x + canvasSize.width - getSize().width - 10, canvasLocation.y + 10);

        helpLabel.setText(helpBundle.getString("a__hajimeni"));
    }

    public void setExplanation(String key) {
        helpLabel.setText(helpBundle.getString(key));
    }

    private void onCancel() {
        setVisible(false);
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        contentPane = new JPanel();
        contentPane.setLayout(new GridBagLayout());
        contentPane.setAutoscrolls(false);
        final JScrollPane scrollPane1 = new JScrollPane();
        scrollPane1.setMinimumSize(new Dimension(300, 400));
        scrollPane1.setPreferredSize(new Dimension(300, 400));
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        contentPane.add(scrollPane1, gbc);
        helpLabel = new JLabel();
        helpLabel.setBackground(new Color(-1));
        helpLabel.setFocusable(false);
        helpLabel.setOpaque(true);
        helpLabel.setVerticalAlignment(1);
        scrollPane1.setViewportView(helpLabel);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return contentPane;
    }
}
